Accuracy of  ship : 90 %
Accuracy of truck : 76 %
final loss: 0.7744952440261841

G:\>python "test 2.py"
cuda:0
Files already downloaded and verified
Files already downloaded and verified
[1,    20] loss: 2.302
[1,    40] loss: 2.280
[1,    60] loss: 2.260
[1,    80] loss: 2.243
[1,   100] loss: 2.232
[1,   120] loss: 2.228
[1,   140] loss: 2.218
[1,   160] loss: 2.215
[1,   180] loss: 2.208
[2,    20] loss: 2.165
[2,    40] loss: 2.158
[2,    60] loss: 2.125
[2,    80] loss: 2.100
[2,   100] loss: 2.085
[2,   120] loss: 2.084
[2,   140] loss: 2.069
[2,   160] loss: 2.073
[2,   180] loss: 2.059
[3,    20] loss: 2.040
[3,    40] loss: 2.025
[3,    60] loss: 2.022
[3,    80] loss: 2.014
[3,   100] loss: 2.016
[3,   120] loss: 2.023
[3,   140] loss: 2.004
[3,   160] loss: 2.005
[3,   180] loss: 1.994
[4,    20] loss: 1.987
[4,    40] loss: 1.986
[4,    60] loss: 1.962
[4,    80] loss: 1.955
[4,   100] loss: 1.961
[4,   120] loss: 1.978
[4,   140] loss: 1.962
[4,   160] loss: 1.971
[4,   180] loss: 1.935
[5,    20] loss: 1.952
[5,    40] loss: 1.928
[5,    60] loss: 1.936
[5,    80] loss: 1.924
[5,   100] loss: 1.912
[5,   120] loss: 1.925
[5,   140] loss: 1.935
[5,   160] loss: 1.908
[5,   180] loss: 1.888
[6,    20] loss: 1.908
[6,    40] loss: 1.914
[6,    60] loss: 1.898
[6,    80] loss: 1.879
[6,   100] loss: 1.888
[6,   120] loss: 1.872
[6,   140] loss: 1.897
[6,   160] loss: 1.857
[6,   180] loss: 1.868
epoch:5 , Accuracy of the network on the 10000 test images: 35 %
[7,    20] loss: 1.797
[7,    40] loss: 1.745
[7,    60] loss: 1.686
[7,    80] loss: 1.696
[7,   100] loss: 1.696
[7,   120] loss: 1.675
[7,   140] loss: 1.708
[7,   160] loss: 1.656
[7,   180] loss: 1.679
[8,    20] loss: 1.663
[8,    40] loss: 1.655
[8,    60] loss: 1.625
[8,    80] loss: 1.622
[8,   100] loss: 1.606
[8,   120] loss: 1.614
[8,   140] loss: 1.635
[8,   160] loss: 1.626
[8,   180] loss: 1.580
[9,    20] loss: 1.596
[9,    40] loss: 1.571
[9,    60] loss: 1.567
[9,    80] loss: 1.546
[9,   100] loss: 1.544
[9,   120] loss: 1.538
[9,   140] loss: 1.536
[9,   160] loss: 1.574
[9,   180] loss: 1.537
[10,    20] loss: 1.558
[10,    40] loss: 1.476
[10,    60] loss: 1.512
[10,    80] loss: 1.492
[10,   100] loss: 1.504
[10,   120] loss: 1.461
[10,   140] loss: 1.478
[10,   160] loss: 1.464
[10,   180] loss: 1.480
[11,    20] loss: 1.438
[11,    40] loss: 1.461
[11,    60] loss: 1.490
[11,    80] loss: 1.457
[11,   100] loss: 1.411
[11,   120] loss: 1.433
[11,   140] loss: 1.439
[11,   160] loss: 1.438
[11,   180] loss: 1.426
epoch:10 , Accuracy of the network on the 10000 test images: 50 %
[12,    20] loss: 1.390
[12,    40] loss: 1.414
[12,    60] loss: 1.398
[12,    80] loss: 1.380
[12,   100] loss: 1.380
[12,   120] loss: 1.388
[12,   140] loss: 1.363
[12,   160] loss: 1.402
[12,   180] loss: 1.379
[13,    20] loss: 1.386
[13,    40] loss: 1.361
[13,    60] loss: 1.372
[13,    80] loss: 1.325
[13,   100] loss: 1.375
[13,   120] loss: 1.362
[13,   140] loss: 1.321
[13,   160] loss: 1.327
[13,   180] loss: 1.366
[14,    20] loss: 1.339
[14,    40] loss: 1.309
[14,    60] loss: 1.303
[14,    80] loss: 1.308
[14,   100] loss: 1.296
[14,   120] loss: 1.328
[14,   140] loss: 1.342
[14,   160] loss: 1.329
[14,   180] loss: 1.308
[15,    20] loss: 1.277
[15,    40] loss: 1.317
[15,    60] loss: 1.272
[15,    80] loss: 1.311
[15,   100] loss: 1.284
[15,   120] loss: 1.332
[15,   140] loss: 1.276
[15,   160] loss: 1.275
[15,   180] loss: 1.267
[16,    20] loss: 1.240
[16,    40] loss: 1.264
[16,    60] loss: 1.268
[16,    80] loss: 1.270
[16,   100] loss: 1.244
[16,   120] loss: 1.273
[16,   140] loss: 1.267
[16,   160] loss: 1.295
[16,   180] loss: 1.264
epoch:15 , Accuracy of the network on the 10000 test images: 57 %
[17,    20] loss: 1.247
[17,    40] loss: 1.244
[17,    60] loss: 1.233
[17,    80] loss: 1.233
[17,   100] loss: 1.210
[17,   120] loss: 1.247
[17,   140] loss: 1.244
[17,   160] loss: 1.239
[17,   180] loss: 1.245
[18,    20] loss: 1.222
[18,    40] loss: 1.215
[18,    60] loss: 1.227
[18,    80] loss: 1.190
[18,   100] loss: 1.195
[18,   120] loss: 1.196
[18,   140] loss: 1.224
[18,   160] loss: 1.225
[18,   180] loss: 1.206
[19,    20] loss: 1.215
[19,    40] loss: 1.204
[19,    60] loss: 1.182
[19,    80] loss: 1.168
[19,   100] loss: 1.193
[19,   120] loss: 1.180
[19,   140] loss: 1.173
[19,   160] loss: 1.208
[19,   180] loss: 1.174
[20,    20] loss: 1.153
[20,    40] loss: 1.148
[20,    60] loss: 1.187
[20,    80] loss: 1.205
[20,   100] loss: 1.177
[20,   120] loss: 1.165
[20,   140] loss: 1.171
[20,   160] loss: 1.159
[20,   180] loss: 1.158
[21,    20] loss: 1.175
[21,    40] loss: 1.150
[21,    60] loss: 1.150
[21,    80] loss: 1.161
[21,   100] loss: 1.137
[21,   120] loss: 1.139
[21,   140] loss: 1.133
[21,   160] loss: 1.138
[21,   180] loss: 1.135
epoch:20 , Accuracy of the network on the 10000 test images: 60 %
[22,    20] loss: 1.132
[22,    40] loss: 1.121
[22,    60] loss: 1.131
[22,    80] loss: 1.101
[22,   100] loss: 1.149
[22,   120] loss: 1.105
[22,   140] loss: 1.131
[22,   160] loss: 1.136
[22,   180] loss: 1.127
Traceback (most recent call last):
Process Process-53:
  File "<string>", line 1, in <module>
  File "G:\Anaconda\lib\multiprocessing\spawn.py", line 105, in spawn_main
    exitcode = _main(fd)
  File "G:\Anaconda\lib\multiprocessing\spawn.py", line 114, in _main
    prepare(preparation_data)
  File "G:\Anaconda\lib\multiprocessing\spawn.py", line 225, in prepare
    _fixup_main_from_path(data['init_main_from_path'])
  File "G:\Anaconda\lib\multiprocessing\spawn.py", line 277, in _fixup_main_from
_path
    run_name="__mp_main__")
  File "G:\Anaconda\lib\runpy.py", line 263, in run_path
    pkg_name=pkg_name, script_name=fname)
  File "G:\Anaconda\lib\runpy.py", line 96, in _run_module_code
    mod_name, mod_spec, pkg_name, script_name)
  File "G:\Anaconda\lib\runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "G:\test 2.py", line 1, in <module>
    import torch
  File "G:\Anaconda\lib\site-packages\torch\__init__.py", line 40, in <module>
    import numpy as _np
  File "G:\Anaconda\lib\site-packages\numpy\__init__.py", line 142, in <module>
Traceback (most recent call last):
  File "G:\Anaconda\lib\multiprocessing\popen_spawn_win32.py", line 65, in __ini
t__
Traceback (most recent call last):
  File "G:\Anaconda\lib\multiprocessing\process.py", line 258, in _bootstrap
    self.run()
  File "G:\Anaconda\lib\multiprocessing\process.py", line 93, in run
    self._target(*self._args, **self._kwargs)
  File "G:\Anaconda\lib\site-packages\torch\utils\data\dataloader.py", line 52,
in _worker_loop
    r = index_queue.get()
  File "G:\Anaconda\lib\multiprocessing\queues.py", line 335, in get
    res = self._reader.recv_bytes()
  File "G:\Anaconda\lib\multiprocessing\connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
  File "G:\Anaconda\lib\multiprocessing\connection.py", line 306, in _recv_bytes

    [ov.event], False, INFINITE)
KeyboardInterrupt
    from . import add_newdocs
  File "G:\Anaconda\lib\site-packages\numpy\add_newdocs.py", line 13, in <module
>
    reduction.dump(process_obj, to_child)
  File "G:\Anaconda\lib\multiprocessing\reduction.py", line 60, in dump
    from numpy.lib import add_newdoc
  File "G:\Anaconda\lib\site-packages\numpy\lib\__init__.py", line 8, in <module
>
    from .type_check import *
  File "G:\Anaconda\lib\site-packages\numpy\lib\type_check.py", line 11, in <mod
ule>
    ForkingPickler(file, protocol).dump(obj)
BrokenPipeError: [Errno 32] Broken pipe

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "test 2.py", line 97, in <module>
    for i, data in enumerate(trainloader, 0):
  File "G:\Anaconda\lib\site-packages\torch\utils\data\dataloader.py", line 451,
 in __iter__
    return _DataLoaderIter(self)
  File "G:\Anaconda\lib\site-packages\torch\utils\data\dataloader.py", line 239,
 in __init__
    w.start()
  File "G:\Anaconda\lib\multiprocessing\process.py", line 105, in start
    self._popen = self._Popen(self)
  File "G:\Anaconda\lib\multiprocessing\context.py", line 223, in _Popen
    return _default_context.get_context().Process._Popen(process_obj)
  File "G:\Anaconda\lib\multiprocessing\context.py", line 322, in _Popen
    return Popen(process_obj)
  File "G:\Anaconda\lib\multiprocessing\popen_spawn_win32.py", line 65, in __ini
t__
    reduction.dump(process_obj, to_child)
KeyboardInterrupt
    import numpy.core.numeric as _nx
  File "G:\Anaconda\lib\site-packages\numpy\core\__init__.py", line 38, in <modu
le>
    from . import numeric
  File "G:\Anaconda\lib\site-packages\numpy\core\numeric.py", line 2898, in <mod
ule>
    from . import arrayprint
  File "G:\Anaconda\lib\site-packages\numpy\core\arrayprint.py", line 1167, in <
module>
    class SubArrayFormat(object):
KeyboardInterrupt

G:\>